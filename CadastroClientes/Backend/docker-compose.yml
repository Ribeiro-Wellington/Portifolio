version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - cadastro-clientes-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -C -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 30s

  db-init:
    build:
      context: .
      dockerfile: Dockerfile.init
    depends_on:
      sqlserver:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=CadastroClientes;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True
    volumes:
      - ./init-db.sh:/app/init-db.sh
    networks:
      - cadastro-clientes-network
    command: >
      sh -c "
        chmod +x /app/init-db.sh &&
        /app/init-db.sh
      "

  api:
    build:
      context: .
      dockerfile: CadastroClientes.API/Dockerfile
    ports:
      - "5000:8080"
    depends_on:
      - db-init
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=CadastroClientes;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True
    networks:
      - cadastro-clientes-network

volumes:
  sqlserver_data:

networks:
  cadastro-clientes-network:
    driver: bridge 